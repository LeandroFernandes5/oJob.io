# Author: Nuno Aguiar

todo:
- Generate server
- Generate start script
- Generate stop script
- Generate add script
- Generate del script
- Generate list script
- Generate destroy script
- Show instructions

ojob:
  opacks      :
  - openaf: 20210412
  catch       : |
    logErr(exception);
  logToConsole: true   # to change when finished
  sequential  : true

jobs:
# ----------
- name: Help
  help:
    text   : Creates an openvpn docker daemon and shell scripts to add/del/list users.
    expects:
    - name: url
      desc: The vpn external url (either "tcp://some.address" or "udp://some.address"
    - name: path
      desc: Path where the scripts to use the vpn will be created (defaults to ".")
    - name: dns
      desc: Use a specific dns server instead of the Google DNS servers (e.g. 1.2.3.4)
    - name: default
      desc: If default=true all traffic will be redirect to this vpn (default is false)
    - name: nat
      desc: If nat=false vpn clients will not be NATed (default is true)
    - name: subnet
      desc: Using a specific subnet for the vpn clients (e.g. 10.200.0.0/16)
    - name: route
      desc: Specify a specific route for VPN clients (e.g. "192.168.1.0 255.255.255.0")
    - name: keysize
      desc: Specify a RSA keysize different from the 2048 default.

# ----------------------------
- name: Build container if ARM
  exec: |
    var plat = String(java.lang.System.getProperty("os.arch"));
    if (plat == "aarch64") {
      logWarn("Need to build container for arm...");
      $sh("docker build -f Dockerfile.aarch64 -t kylemanna/openvpn https://github.com/kylemanna/docker-openvpn.git")
      .prefix("build")
      .get();
    }
   
# ---------------------
- name: Generate server
  from:
  - Build container if ARM
  exec: |
    ow.loadFormat();
    
    args.path = _$(args.path, "path").default(".");
    args.url  = _$(args.url, "url").default("tcp://" + ow.format.getPublicIP().ip);
    args.keysize = _$(args.keysize, "keysize").default(2048);

    var exists = $sh("docker").get(0).exitcode;
    if (exists != 0) throw "Couldn't find the docker client. Please install docker.";

    var res;
    log("Creating volume openvpn...");
    res = $sh("docker volume create openvpn").prefix("volume").get(0);
    if (res.exitcode != 0) throw "Failed to create openvpn docker volume.";

    log("Generating openvpn configuration for " + args.url + "...");
    //res = $sh("docker run -v openvpn:/etc/openvpn --log-driver=none --rm kylemanna/openvpn ovpn_genconfig -N -d -s 10.200.0.0/16 -C 'AES-256-CBC' -a 'SHA384' -u " + args.url).prefix("config").get(0);
    var cmd = "docker run -v openvpn:/etc/openvpn --log-driver=none --rm kylemanna/openvpn ovpn_genconfig ";
    cmd += "-C 'AES-256-CBC' -a 'SHA384' -b ";
    if (!toBoolean(args.default)) cmd += "-d ";
    if (toBoolean(args.nat))      cmd += "-N ";
    if (isDef(args.route))        cmd += "-p 'route " + args.route + "' ";
    if (isDef(args.dns))          cmd += "-n " + args.dns + " ";
    if (isDef(args.subnet))       cmd += "-s " + args.subnet + " ";
    cmd += "-u";
    print(cmd);
    res = $sh(cmd + args.url).prefix("config").get(0);
    if (res.exitcode != 0) throw "Failed to create openvpn configuration.";

    log("Initializing PKI...");
    res = $sh("docker run -v openvpn:/etc/openvpn --log-driver=none --rm -it -e EASYRSA_KEY_SIZE=" + args.keysize + " kylemanna/openvpn ovpn_initpki").prefix("init pki").exec(0);
    if (res.exitcode != 0) throw "Failed to initialize PKI.";

    args.__format = _$(args.__format).default("pm");
    ow.oJob.output(args, args);

# ---------------------
- name: Generate script
  exec: |
    _$(args.text, "text").$_();
    args.path = _$(args.path, "path").default(".");
    args.file = _$(args.file, "file").$_();

    var isWin = false;
    if (isDef(args.isWin) && args.isWin.toLowerCase() == "true") {
       isWin = true;
    } else {
       ow.loadFormat();
       if (ow.format.isWindows()) isWin = true;
    }

    if (isWin) args.file = args.file.replace(/\.sh$/, ".bat");
    var text = (isWin ? args.winText : args.text);
    if (args.url.startsWith("udp")) text = text.replace("tcp", "udp");

    io.writeFileString(args.path + "/" + args.file, text);
    if (!isWin) $sh("chmod u+x " + args.path + "/" + args.file).exec();

# ---------------------------
- name: Generate start script
  deps:
  - Generate server
  to  :
  - Generate script
  args:
    file: openvpn_start.sh
    text: |
      #!/bin/sh
      docker run -v openvpn:/etc/openvpn -d -p 1194:1194/tcp --restart=always --cap-add=NET_ADMIN --name openvpn kylemanna/openvpn
    winText: |
      @echo off
      docker run -v openvpn:/etc/openvpn -d -p 1194:1194/tcp --restart=always --cap-add=NET_ADMIN --name openvpn kylemanna/openvpn

# --------------------------
- name: Generate stop script
  deps:
  - Generate server
  to  :
  - Generate script
  args:
    file: openvpn_stop.sh
    text: |
      #!/bin/sh
      docker stop openvpn
      docker rm openvpn
    winText: |
      @echo off
      docker stop openvpn
      docker rm openvpn

# -------------------------
- name: Generate add script
  deps:
  - Generate server
  to  :
  - Generate script
  args:
    file: openvpn_add.sh
    text: |
      #!/bin/sh
      if [ -z "$1" ]; then
        echo "Please provide an username."
      else
        docker run -v openvpn:/etc/openvpn --log-driver=none --rm -it -e EASYRSA_KEY_SIZE=" + args.keysize + " kylemanna/openvpn easyrsa build-client-full $1 nopass
        docker run -v openvpn:/etc/openvpn --log-driver=none --rm kylemanna/openvpn ovpn_getclient $1 > $1.ovpn
        echo "Created file $1.ovpn"
      fi
    winText: |
      IF "%1"=="" (
        echo "Please provide an username."
      ) ELSE (
        @echo off
        docker run -v openvpn:/etc/openvpn --log-driver=none --rm -it -e EASYRSA_KEY_SIZE=" + args.keysize + " kylemanna/openvpn easyrsa build-client-full %1 nopass
        docker run -v openvpn:/etc/openvpn --log-driver=none --rm kylemanna/openvpn ovpn_getclient %1 > %1.ovpn
        echo "Created file %1.ovpn"
      )

# ------------------------
- name: Generate del script
  deps:
  - Generate server
  to  :
  - Generate script
  args:
    file: openvpn_del.sh
    text: |
      #!/bin/sh
      if [ -z "$1" ]; then
        echo "Please provide a name."
      else
        docker run -v openvpn:/etc/openvpn --log-driver=none --rm -ti kylemanna/openvpn ovpn_revokeclient $1
      fi
    winText: |
      IF "%1"=="" (
        echo "Please provide an username."
      ) ELSE (
        @echo off
        docker run -v openvpn:/etc/openvpn --log-driver=none --rm -ti kylemanna/openvpn ovpn_revokeclient %1
      )

# --------------------------
- name: Generate list script
  deps:
  - Generate server
  to  :
  - Generate script
  args:
    file: openvpn_list.sh
    text: |
      #!/bin/sh
      docker run -v openvpn:/etc/openvpn --log-driver=none --rm kylemanna/openvpn ovpn_listclients
    winText: |
      @echo off
      docker run -v openvpn:/etc/openvpn --log-driver=none --rm kylemanna/openvpn ovpn_listclients

# -----------------------------
- name: Generate destroy script
  deps:
  - Generate server
  to  :
  - Generate script
  args:
    file: openvpn_destroy.sh
    text: |
      #!/bin/sh
      docker volume rm openvpn
    winText: |
      @echo off
      docker volume rm openvpn

# -----------------------
- name: Show instructions
  deps:
  - Generate start script
  - Generate stop script
  - Generate add script
  - Generate del script
  - Generate list script
  - Generate destroy script
  exec: |
    ow.oJob.output(args, args);